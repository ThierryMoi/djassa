version: "3.8"

services:

  consul:
    image: hashicorp/consul:1.16
    command: agent -server -bootstrap-expect=1 -client=0.0.0.0 -ui
    ports:
      - "8500:8500"      # UI et API HTTP Consul
      - "8600:8600/udp"  # DNS pour service discovery
    volumes:
      - consul_data:/consul/data
    networks:
      - backend

  traefik:
    image: traefik:v2.11
    command:
      - "--api.insecure=true"
      - "--providers.consulcatalog.endpoint.address=consul:8500"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"  # Dashboard Traefik
    depends_on:
      - consul
    networks:
      - backend

  keycloak:
    image: quay.io/keycloak/keycloak:24.0.1
    command: start-dev
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-db:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KC_HOSTNAME_STRICT: "false"
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8081:8080"
    depends_on:
      - keycloak-db
    networks:
      - backend

  keycloak-db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
    volumes:
      - keycloak_pgdata:/var/lib/postgresql/data
    networks:
      - backend

  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users_db
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - backend

  vault:
    image: hashicorp/vault:latest
    container_name: vault
    cap_add:
      - IPC_LOCK
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: root
      VAULT_DEV_LISTEN_ADDRESS: "0.0.0.0:8200"
    ports:
      - "8200:8200"
    volumes:
      - vault_data:/vault/file
    networks:
      - backend
    command: server -dev

  vault-init:
    image: hashicorp/vault:latest
    depends_on:
      - vault
    entrypoint: ["/bin/sh", "-c", "sleep 5 && /vault/init.sh"]
    volumes:
      - ./vault/init.sh:/vault/init.sh
    environment:
      VAULT_ADDR: http://vault:8200
      VAULT_TOKEN: root
    networks:
      - backend

  # Service auth-proxy principal
  auth-proxy:
    build: ./auth-proxy
    environment:
      VAULT_ADDR: http://vault:8200
      VAULT_TOKEN: root
      keycloak_url: http://keycloak:8080
      postgres_db: users_db
      realm: djassa
      audience: djassa-client
      user_service_url: http://users:8000
    networks:
      - backend
    depends_on:
      - keycloak
      - postgres
      - vault
      - vault-init
      - consul

  # Agent Consul client pour auth-proxy (sidecar)
  consul-agent-auth-proxy:
    image: hashicorp/consul:1.16
    command: agent -retry-join=consul -client=0.0.0.0 -node=auth-proxy-agent -bind=0.0.0.0 -config-dir=/consul/config
    depends_on:
      - consul
      - auth-proxy
    volumes:
      - ./consul-config/auth-proxy.json:/consul/config/auth-proxy.json:ro
    networks:
      - backend

  # Service users principal
  users:
    build: ./users
    environment:
      VAULT_ADDR: http://vault:8200
      VAULT_TOKEN: root
      keycloak_url: http://keycloak:8080
      postgres_db: users_db
      realm: djassa
      audience: djassa-client
      user_service_url: http://users:8000
    networks:
      - backend
    depends_on:
      - keycloak
      - postgres
      - vault
      - vault-init
      - consul

  # Agent Consul client pour users (sidecar)
  consul-agent-users:
    image: hashicorp/consul:1.16
    command: agent -retry-join=consul -client=0.0.0.0 -node=users-agent -bind=0.0.0.0 -config-dir=/consul/config
    depends_on:
      - consul
      - users
    volumes:
      - ./consul-config/users.json:/consul/config/users.json:ro
    networks:
      - backend

networks:
  backend:

volumes:
  pgdata:
  keycloak_pgdata:
  vault_data:
  consul_data:
